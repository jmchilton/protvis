<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:tal="http://xml.zope.org/namespaces/tal">
	<head>
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<title>${type} Results</title>
		<link href="/res/styles/list.css" type="text/css" rel="stylesheet" />
		<link id="themeStyles" href="/res/dojo/dijit/themes/claro/claro.css" type="text/css" rel="stylesheet" />
		<link id="themeStyles" href="/res/dojo/dojox/html/resources/ellipsis.css" type="text/css" rel="stylesheet" />
		<script type="text/javascript" src="/res/dojo/dojo/dojo.js" data-dojo-config="parseOnLoad: true"></script>
		<script type="text/javascript">
			dojo.require("dojo.fx");
			dojo.require("dijit.Dialog");
			dojo.require("dojo._base.connect");
			dojo.require("dijit.DynamicTooltip");
			dojo.require("dojox.html.ellipsis");

			var DetailsDialog;
			var CurrentResults = "";
			var CurrentAnimation = null;
			var PendingAnimations = new Array();
			var Tooltips = new Array();
			var CurrentResultsID = 0;
			var LastFilterType = 0;
			var results_sortcol = "${sortcol}";
			var results_sortdir = "asc";
	
			function BuildResultsHeader() {
				return "${head_results}";
			}
	
			function BuildPeptidesHeader() {
				return "${head_peptides}";
			}
			
			function SortRestults(column) {
				if (column == results_sortcol) {
					if (results_sortdir == "asc") {
						results_sortdir = "dsc";
					} else {
						results_sortdir = "asc";
					}
				} else {
					results_sortcol = column;
					results_sortdir = "asc";
				}
				ApplyFilter(LastFilterType);
			}
			
			function QueueAnimation(anim) {
				dojo.connect(anim, "onEnd", function() {
					if (PendingAnimations.length > 0) {
						CurrentAnimation = PendingAnimations.shift();
						CurrentAnimation.play();
					} else {
						CurrentAnimation = null;
					}
				});
				if (CurrentAnimation == null) {
					CurrentAnimation = anim;
					anim.play();
				} else {
					PendingAnimations.push(anim);
				}
			}

			function ApplyFilter(type) {
				LastFilterType = type;
				var oldhits = dojo.byId("search_results_" + CurrentResultsID);
				if (oldhits == null) {
					var anim = dojo.fx.wipeIn({
						node: dojo.byId("searching"),
						onEnd: function() {
							if (PendingAnimations.length > 0) {
								CurrentAnimation = PendingAnimations.shift();
								CurrentAnimation.play();
							} else {
								CurrentAnimation = null;
							}
						}
					});
					if (CurrentAnimation == null) {
						CurrentAnimation = anim;
						anim.play();
						delete PendingAnimations;
						PendingAnimations = new Array();
					} else {
						delete PendingAnimations;
						PendingAnimations = new Array();
						PendingAnimations.push(anim);
					}
				} else {
					QueueAnimation(dojo.fx.wipeOut({
						node: dojo.byId("search_results_" + CurrentResultsID),
						onEnd: function(n) {
							delete Tooltips.shift();
							dojo.byId("search_results").removeChild(n);
							if (PendingAnimations.length > 0) {
								CurrentAnimation = PendingAnimations.shift();
								CurrentAnimation.play();
							} else {
								CurrentAnimation = dojo.fx.wipeIn({
									node: dojo.byId("searching"),
									onEnd: function() {
										if (PendingAnimations.length > 0) {
											CurrentAnimation = PendingAnimations.shift();
											CurrentAnimation.play();
										} else {
											CurrentAnimation = null;
										}
									}
								});
								CurrentAnimation.play();
							}
						}
					}));
				}
				str = "/search/${type}/query/";
				if (type == 0) {
					str += "basic?file=${file}&q=" + dojo.byId("filter_basic_string").value;
				} else {
					str += "adv?file=${file}";
				}
				str += "&max=50&sort=" + results_sortcol + "&order=" + results_sortdir;
				dojo.xhrGet({
					url: str,
					load: function(results) {
						var cont = document.createElement("div");
						cont.id = "search_results_" + ++CurrentResultsID;
						cont.visible = "false";
						cont.style = "display: none";
						results = BuildResults(results, CurrentResultsID);
						cont.innerHTML = results[0];
						dojo.byId("search_results").appendChild(cont);
						if (results.length > 1) {
							var tt = new dijit.DynamicTooltip({
								connectId: results[1],
								href: "/tooltip/${type}/peptide?file=${file}&peptide=",
								position: ["below", "above"]
							})
							Tooltips.push(tt);
							delete results[1];
						}
						delete PendingAnimations;
						PendingAnimations = new Array();
						QueueAnimation(dojo.fx.wipeOut({ node: dojo.byId("searching") }));
						QueueAnimation(dojo.fx.wipeIn({ node: cont }));
					},
					error: function() {
						var cont = document.createElement("div");
						cont.id = "search_results_" + ++CurrentResultsID;
						cont.visible = "false";
						cont.style = "display: none";
						dojo.byId("search_results").innerHTML = "Query Error. Server could not be reached";
						dojo.byId("search_results").appendChild(cont);
						delete PendingAnimations;
						PendingAnimations = new Array();
						QueueAnimation(dojo.fx.wipeOut({ node: dojo.byId("searching") }));
						QueueAnimation(dojo.fx.wipeIn({ node: cont }));
					}
				});
			}
			
			function ApplyFilterBasic() {
				ApplyFilter(0);
			}
			
			function ApplyFilterAdv() {
				ApplyFilter(1);
			}

			dojo.ready(function() {
				// Populate content initially
				ApplyFilterBasic();
				DetailsDialog = new dijit.Dialog({ style: "width: 400px" });
				// Connect button
				dojo.connect(dojo.byId("filter_apply_basic"), "onclick", ApplyFilterBasic);
				dojo.connect(dojo.byId("filter_apply_adv"), "onclick", ApplyFilterAdv);

				var WipeTargetBasic = dojo.byId("filter_basic_view");
				var WipeTargetAdv = dojo.byId("filter_advanced_view");
				var FadeTargetBasic = dojo.byId("filter_switch_basic_to_adv");
				var FadeTargetAdv = dojo.byId("filter_switch_adv_to_basic");
				var FadeTargetArrowBasic = dojo.byId("filter_switch_basic_to_adv");
				var FadeTargetArrowAdv = dojo.byId("filter_switch_adv_to_basic");
				var FadeTargetTitleBasic = dojo.byId("filter_title_basic");
				var FadeTargetTitleAdv = dojo.byId("filter_title_adv");
				dojo.connect(dojo.byId("filter_switch_basic_to_adv"), "onclick", function(evt) {
					dojo.fx.combine([
						dojo.fx.chain([
							dojo.fx.wipeOut({ node: WipeTargetBasic }),
							dojo.fx.wipeIn({ node: WipeTargetAdv })
						]),
						dojo.fx.chain([
							dojo.fx.combine([
								dojo.fadeOut({ node: FadeTargetArrowBasic }),
								dojo.fadeOut({ node: FadeTargetTitleBasic })
							]),
							dojo.fx.combine([
								dojo.fadeIn({ node: FadeTargetArrowAdv }),
								dojo.fadeIn({ node: FadeTargetTitleAdv })
							])
						])
					]).play();
				});
				dojo.connect(dojo.byId("filter_switch_adv_to_basic"), "onclick", function(evt) {
					dojo.fx.combine([
						dojo.fx.chain([
							dojo.fx.wipeOut({ node: WipeTargetAdv }),
							dojo.fx.wipeIn({ node: WipeTargetBasic })
						]),
						dojo.fx.chain([
							dojo.fx.combine([
								dojo.fadeOut({ node: FadeTargetArrowAdv }),
								dojo.fadeOut({ node: FadeTargetTitleAdv })
							]),
							dojo.fx.combine([
								dojo.fadeIn({ node: FadeTargetArrowBasic }),
								dojo.fadeIn({ node: FadeTargetTitleBasic })
							])
						])
					]).play();
				});
			});
		</script>
		<script src="/decoders/${type}.js"></script>
	</head>
	<body class="claro">
		<table id="container" style="width: 100%;">
			<tr>
				<td>
					<div style="display: inline">
						<img id="filter_switch_basic_to_adv" src="/images/arrows_down_small.png" alt="More" />
						<img id="filter_switch_adv_to_basic" style="opacity: 0;" src="/images/arrows_up_small.png" alt="Less" />
					</div>
					<div style="display: inline">
						<span id="filter_title_basic">Basic Search</span>
						<span id="filter_title_adv" style="opacity: 0;">Advanced Search</span>
					</div>
					<div style="display: inline">
					</div>
				</td>
			</tr>
			<tr>
				<td>
					<form id="filter_basic_view" action="javascript:ApplyFilterBasic();">
						Filter: <input type="text" id="filter_basic_string" /> <input type="button" id="filter_apply_basic" value="Filter" />
					</form>
					<form id="filter_advanced_view" action="javascript:ApplyFilterAdv();" visible="false" style="display: none;">
						<table id="form_advanced">
							<tr>
								<td>Peptide:</td>
								<td>
									<input type="text" id="filter_adv_peptide" />
								</td>
							</tr>
							<tr>
								<td>Protein:</td>
								<td>
									<input type="text" id="filter_adv_protein" />
								</td>
							</tr>
							<tr>
								<td>Calc Neutral Pep Mass:</td>
								<td>
									<input type="text" id="filter_adv_neutralpepmass" />
								</td>
								<td>
									<select id="filter_adv_neutralpepmass_match">
										<option value="approx" selected="selected">Approximatly Equal</option>
										<option value="less">Less Than</option>
										<option value="more">Greater Than</option>
									</select>
								</td>
							</tr>
							<tr>
								<td>Mass Difference:</td>
								<td>
									<input type="text" id="filter_adv_massdiff" />
								</td>
								<td>
									<select id="filter_adv_massdiff_match">
										<option value="approx" selected="selected">Approximatly Equal</option>
										<option value="less">Less Than</option>
										<option value="more">Greater Than</option>
									</select>
								</td>
							</tr>
							<tr>
								<td>Protein Description:</td>
								<td>
									<input type="text" id="filter_adv_descr" />
								</td>
							</tr>
							<tr>
								<td>Modified:</td>
								<td>
									<select id="filter_adv_modified">
										<option value="any" selected="selected">Don't Care</option>
										<option value="yes">Yes</option>
										<option value="no">No</option>
									</select>
								</td>
							</tr>
							<tr>
								<td>Matched Ions:</td>
								<td>
									<input type="text" id="filter_adv_matchedions" />
								</td>
								<td>
									<select id="filter_adv_matchedions_match">
										<option value="approx" selected="selected">Equal To</option>
										<option value="less">Less Than</option>
										<option value="more">Greater Than</option>
									</select>
								</td>
							</tr>
							<tr>
								<td>Total Ions:</td>
								<td>
									<input type="text" id="filter_adv_totalions" />
								</td>
								<td>
									<select id="filter_adv_totalions_match">
										<option value="approx" selected="selected">Equal To</option>
										<option value="less">Less Than</option>
										<option value="more">Greater Than</option>
									</select>
								</td>
							</tr>
						</table>
						<input type="button" id="filter_apply_adv" value="Filter" />
					</form>
				</td>
			</tr>
			<tr>
				<td>
				</td>
			</tr>
			<tr>
				<td>
					<div id="searching" style="width: 100%;" class="dijitContentPaneLoading">Searching... Please wait</div>
					<div id="search_results" style="width: 100%;">
					</div>
				</td>
			</tr>
			<tr>
				<td>
				</td>
			</tr>
		</table>
	</body>
</html>
