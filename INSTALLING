Contents
  1. Quick Installation
  2. Manual Installation
    2.1 Setting up with a virtual environment
    2.2 Installing into your system python
    2.3 Installing blast+ (Optional)
  3. Working with other web servers
    3.1 Apache 2.X
    3.2 nginx
  4. Development


1. Quick Installation

  Quick installation is only avaliable for unix systems. Windows users must follow the manual installation instructions in Section 2
  For easy installation you can use the setup script.
  This script will download missing/new packages from the internet and install them into a local directory, without affecting your system
  To install missing packages which will affect the system, such as compiler, supply the option --install-missing
    > ./setup.sh --auto-install
    OR
    > ./setup.sh
  This will attempt to install python, setuptools and virtualenv through your distributions package manager if they are not present.
  other pakages are also downloaded into a local working copy, and will not affect the system configuration
  blast+ is downloaded and installed into bin/ if they are not present on your system

  The system is installed into a virtual environment in the current working directory.
  This will also install pyramid and a number of other dependancies into the virtual environment. No permissions are required for installing these packages

  Once installed you can run the server with
    > ./run --daemon
  And stop it with
    > ./run --stop-daemon

2. Manual Installation

  The recommended method is to install into a virtual environment away from your system python, but it is possible to run from your system python
  
  Minimum requirements:

  PACKAGE    PACKAGE MANAGER NAME  ALTERNATE INSTALLATION
  python     python                http://python.org/download/
  setuptools python-setuptools     http://peak.telecommunity.com/dist/ez_setup.py

  Recommended packages

  PACKAGE    PACKAGE MANAGER NAME   ALTERNATE INSTALLATION
  virtualenv python-virtualenv      easy_install "virtualenv"
  blast+                            ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST
  make       make
  g++        g++
  zlib       zlibc                  http://zlib.net/zlib-1.2.6.tar.gz
  libpng     libpng-dev             http://prdownloads.sourceforge.net/libpng/libpng-1.5.9.tar.gz
  expat      libexpat1-dev          http://prdownloads.sourceforge.net/expat/expat-2.1.0-beta3.tar.gz
  boost      libboost-dev           http://prdownloads.sourceforge.net/boost/boost_1_49_0.tar.gz
  python dev python-dev             http://www.python.org/ftp/python/2.7.2/Python-2.7.2.tgz

  2.1 Setting up with a virtual environment
    Install virtualenv with either your package manager, or the easy_install script, then from the root directory of ProtVis run
      > virtualenv --no-site-packages env
      > cd env
      > bin/easy_install pyramid
      > #now run the server
      > cd ..
      > ./run

  2.2 Installing into your system python
    > easy_install pyramid
    > #now run the server
    > ./Server.py

  2.3 Installing blast+ (Optional)
    blast+ allows ProtVis to generate coverage graphs for peptides in a protein

    If blast+ is already installed on your system you need to make links to it in the bin/ directory
      > ln -s `which makeblastdb` bin/makeblastdb
      > ln -s `which blastdbcmd` bin/blastdbcmd

    If you don't have blast+ and do not wish to install it into your system, you can download the latest version from
    ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST and extract makeblastdb and blastdbcmd into bin/

    Restart the HTTP server once installed for changes to take effect

3. Working with other web servers
  ProtVis can be configured to run underneath either Apache or nginx.
  Other web servers are also possible, however no configuration files are generated
  
  3.1 Apache 2.X
    Note: apache2 is often called httpd. If you cannot find any of the directories or commands with the name apache2, try looking for httpd
    ProtVis runs as a plugin module of Apache via mod_wsgi.
  
    Generate a base configuration file:
      > ./wsgi.sh
    
    OPTIONAL: If you would like the server to run as someone other than your current user:
      Find the line starting with "WSGIDaemonProcess" in ProtVis.conf and change "user=" and "group=" acordingly
      
    Copy the configuration file into your Apache sites or configuration directory:
      Installing as an avaliable site (recomended) (root user may be required):
        Copy the file ProtVis.conf into your Apache sites-avaliable directory, usually /etc/apache2/sites-avaliable and remove the .conf file extension
          > cp ProtVis.conf /etc/apache2/sites-available/ProtVis
        Enable the site
          > a2enmod ProtVis
    
      Installing as a configuration (easy) (root user may be required):
        Copy the file ProtVis.conf into your Apache configuration directory, usually /etc/apache2/conf.d
          > cp ProtVis.conf /etc/apache2/conf.d/
    
    Reload the Apache web server (root user may be required):
      > service apache2 reload
      OR
      > /etc/init.d/apache2 restart
  
  3.2 nginx
    nginx is simply used as a proxy to the ProtVis server.
    You must have the ProtVis server running, although it does not need to be externally accessible.
    
    Start the server daemon and generate a default configuration:
      > ./run --daemon=nginx
      This will generate ProtVis.conf
      
    Copy ProtVis.conf into 1 of your include directories (root user may be required):
      The default include directories are usually /etc/nginx/conf.d/ (prefered) AND /etc/nginx/sites-enabled/
      > cp ProtVis.conf /etc/nginx/conf.d/ 

    Reload the nginx web server (root user may be required):
      > service nginx reload
      OR
      > /etc/init.d/nginx reload

4. Development
  The script ./dojo_build is for recompiling the dojo library if you add additional dojo dependencies.
  This script requires either java or node. If neither is installed you will be given the option to install one of when running the script
